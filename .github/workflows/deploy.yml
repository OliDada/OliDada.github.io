name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Debug and create config.js
      run: |
        echo "=== DEBUG INFO ==="
        echo "GEMINI_API_KEY length: ${#GEMINI_API_KEY}"
        echo "First 10 chars: ${GEMINI_API_KEY:0:10}..."
        echo "==================="
        
        # Remove old config.js completely
        rm -f config.js
        
        # Create config.js with the API key
        cat > config.js << EOF
        // Generated by GitHub Actions - contains secure API key
        // Deploy timestamp: $(date)
        window.CONFIG = {
          GEMINI_API_KEY: '${GEMINI_API_KEY}',
          DEPLOY_VERSION: '$(date +"%Y-%m-%d %H:%M:%S UTC")',
          BUILD_ID: '$(echo $GITHUB_SHA | head -c 8)'
        };
        EOF
        
        echo "=== CONFIG.JS CONTENT ==="
        cat config.js
        echo "=========================="
        
        # Verify the API key was inserted
        if grep -q "AIzaSy" config.js; then
          echo "✅ API key successfully inserted"
        else
          echo "❌ API key NOT found in config.js"
          echo "Full config.js content:"
          cat config.js
          exit 1
        fi
        
        # Also create a backup with timestamp
        cp config.js "config-backup-$(date +%s).js"
        ls -la config*
        
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: .
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
