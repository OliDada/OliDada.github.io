name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
        
    - name: Create config.js
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        echo "Creating config.js with API key..."
        echo "API key length: ${#GEMINI_API_KEY}"
        
        # Remove any existing config.js
        rm -f config.js
        
        # Create config.js directly with values
        cat > config.js << EOF
// Generated by GitHub Actions
window.CONFIG = {
  GEMINI_API_KEY: '${GEMINI_API_KEY}',
  DEPLOY_VERSION: '$(date +"%Y-%m-%d %H:%M:%S UTC")',
  BUILD_ID: '$(echo $GITHUB_SHA | head -c 8)'
};
EOF
        
        echo "=== CREATED CONFIG.JS CONTENT ==="
        cat config.js
        echo "================================="
        
        # Verify file exists and has content
        if [ -f config.js ]; then
          echo "✅ Config.js exists"
          echo "File size: $(wc -c < config.js) bytes"
        else
          echo "❌ Config.js was not created"
          exit 1
        fi
        
        # Check if API key was inserted
        if grep -q "AIzaSy" config.js; then
          echo "✅ API key successfully inserted"
        else
          echo "❌ API key not found in config.js"
          exit 1
        fi
        
        echo "✅ Config.js created successfully"
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: .
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
